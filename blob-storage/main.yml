#  This Pipeline Allows you to peform below listed operations full hand.
#  List of operations:
#    - Storage Account Creation [CREATE-STORAGE-ACCOUNT]
#    - Storage Account Deletion [DROP-STORAGE-ACCOUNT]
#    - Full Re-Create [DROP-&-RECREATE]

# Enables/Disables Pipeline Trigger for the branches listed here.
trigger:
- master

# Parameters Initialization for the job
parameters:
- name: environment
  displayName: Environment
  type: string
  values:
    - DEV-TEST
    - UAT
    - PREPROD
    - PROD
- name: region
  displayName: Region/Location
  type: string
  default: eastus2
  values:
    - eastus2
    - eastus
    - southindia
    - westindia
    - westus2
    - westus3
# - name: sku
#   displayName: Replication Strategy
#   type: string
#   default: Standard_RAGRS
#   values:
#     - Premium_LRS
#     - Premium_ZRS
#     - Standard_GRS
#     - Standard_GZR
#     - Standard_LRS
#     - Standard_RAGRS
#     - Standard_RAGZRS
#     - Standard_ZRS
- name: stage
  displayName: Stage
  type: string
  default: "CREATE STORAGE ACCOUNT"
  values:
    - "DROP & CREATE"
    - "CREATE STORAGE ACCOUNT"
    - "DROP STORAGE ACCOUNT"
- name: pool
  displayName: VM-Pool
  type: string
  default: ubuntu-latest
  values:
    - ubuntu-latest
    - windows-latest

# Default Variables Definitiion for the job
variables:
  - template: defaults.yml
    parameters:
      project_name: $(project_name)
      environment: ${{ parameters.environment }}
      prm_sku: $(sku)
      # ${{ ne(variables['sku'], '') }}:
      #   prm_sku: "NON-EMPTY"
      # ${{ eq(variables['sku'], '') }}:
      #   prm_sku: "EMPTY"

# Job Stages Definition
stages:
  # Storage Account Creation
  - stage: CREATE_OR_DROP_ACCOUNT
    displayName: "STAGE - DROP/CREATE STORAGE ACCOUNT"
    pool:
      vmImage: ${{ parameters.pool }}
    jobs:
      - job: drop_storage
        displayName: "JOB - DROP STORAGE ACCOUNT"
        condition: or(eq('${{ parameters.stage }}', 'DROP & CREATE'), eq('${{ parameters.stage }}', 'DROP STORAGE ACCOUNT'))
        steps:
            # Checkout Running Repository
            - checkout: self
              clean: true
            
            # Login Azure Session
            - powershell: |
                & $(build.sourcesDirectory)/azure/login.ps1 -method "SP"
              displayName: az-login
              env:
                AZURE_APP_ID: $(app_id)
                AZURE_APP_SECRET: $(app_secret)
                AZURE_TENANT: $(tenant)
            
            # Drop Storage Account
            - powershell: |
                & $(build.sourcesDirectory)/blob-storage/scripts/drop-blob-storage.ps1
              displayName: drop-blob-storage
              env:
                NAME: $(blob_name)
                RESOURCE_GROUP: $(resource_group)

            # Logout Azure Session
            - powershell: |
                & $(build.sourcesDirectory)/azure/logout.ps1
              displayName: az-logout

      - job: create_storage
        displayName: "JOB - CREATE STORAGE ACCOUNT"
        dependsOn: drop_storage
        condition: and(in(dependencies.drop_storage.result, 'Succeeded', 'Skipped'), or(eq('${{ parameters.stage }}', 'DROP & CREATE'), eq('${{ parameters.stage }}', 'CREATE STORAGE ACCOUNT')))
        steps:
            # Checkout Running Repository
            - checkout: self
              clean: true
            
            # Testing
            - powershell: |
                Write-Host "BLOB-NAME: $(blob_name) `nSKU: ${{ variables.sku }}"
              displayName: Print Parameters & Variables

            # # Login Azure Session
            # - powershell: |
            #     & $(build.sourcesDirectory)/azure/login.ps1 -method "SP"
            #   displayName: az-login
            #   env:
            #     AZURE_APP_ID: $(app_id)
            #     AZURE_APP_SECRET: $(app_secret)
            #     AZURE_TENANT: $(tenant)
            
            # # Blob Storage Creation
            # - powershell: |
            #     & $(build.sourcesDirectory)/blob-storage/scripts/create-blob-storage.ps1
            #   displayName: create-blob-storage
            #   env:
            #     NAME: $(blob_name)
            #     RESOURCE_GROUP: $(resource_group)
            #     LOCATION: ${{ parameters.region }}
            #     SKU: $(sku)
            #     ACCESS_TIER: $(access_tier)
            #     TLS_VERSION: $(tls_version)
            #     PNA: $(public_network_access)
            #     KIND: $(kind)
            
            # # Logout Azure Session
            # - powershell: |
            #     & $(build.sourcesDirectory)/azure/logout.ps1
            #   displayName: az-logout
