#  This Pipeline Allows you to peform below listed operations full hand.
#  List of operations:
#    - Storage Account Creation [CREATE-STORAGE-ACCOUNT]
#    - Storage Account Deletion [DROP-STORAGE-ACCOUNT]
#    - Full Re-Create [DROP-&-RECREATE]

# Enables/Disables Pipeline Trigger for the branches listed here.
trigger:
- master

# Parameters Initialization for the job
parameters:
- name: environment
  displayName: Environment
  type: string
  default: DEV-TEST
  values:
    - DEV-TEST
    - UAT
    - PREPROD
    - PROD
- name: region
  displayName: Region/Location
  type: string
  default: eastus2
  values:
    - eastus2
    - eastus
    - southindia
    - westindia
    - westus2
    - westus3
- name: stage
  displayName: Stage
  type: string
  default: "CREATE STORAGE ACCOUNT"
  values:
    - "DROP & CREATE"
    - "CREATE STORAGE ACCOUNT"
    - "DROP STORAGE ACCOUNT"
- name: pool
  displayName: VM-Pool
  type: string
  default: ubuntu-latest
  values:
    - ubuntu-latest
    - windows-latest

# Variable Definition for the job
variables:
  # Name of the blob
  - name: var_blob_name
    ${{ if ne(variables.blob_name, '') }}:
      value: $(blob_name)
    ${{ if eq(variables.blob_name, '') }}:
      value: sa$(project_name)blb${{ parameters.environment }}
  
  # Type of Access Tier
  - name: var_access_tier
    ${{ if ne(variables.access_tier, '') }}:
      value: $(access_tier)
    ${{ if eq(variables.access_tier, '') }}:
      value: Hot
  
  # Type of Transport Layer Security Version
  - name: var_tls_version
    ${{ if ne(variables.tls_version, '') }}:
      value: $(tls_version)
    ${{ if eq(variables.tls_version, '') }}:
      value: TLS1_2
  
  # Type of Public Network Access
  - name: var_pna
    ${{ if ne(variables.public_network_access, '') }}:
      value: $(public_network_access)
    ${{ if eq(variables.public_network_access, '') }}:
      value: Disabled
  
  # Type of Kind
  - name: var_kind
    ${{ if ne(variables.kind, '') }}:
      value: $(kind)
    ${{ if eq(variables.kind, '') }}:
      value: StorageV2  
  
  # Type of SKU
  - name: var_sku
    ${{ if ne(variables.sku, '') }}:
      value: $(sku)
    ${{ if eq(variables.sku, '') }}:
      value: Standard_RAGRS

# Job Stages Definition
stages:
  # Storage Account Creation
  - stage: CREATE_OR_DROP_ACCOUNT
    displayName: "STAGE - DROP/CREATE STORAGE ACCOUNT"
    pool:
      vmImage: ${{ parameters.pool }}
    jobs:
      - job: drop_storage
        displayName: "JOB - DROP STORAGE ACCOUNT"
        condition: or(eq('${{ parameters.stage }}', 'DROP & CREATE'), eq('${{ parameters.stage }}', 'DROP STORAGE ACCOUNT'))
        steps:
            # Checkout Running Repository
            - checkout: self
              clean: true
            
            # Login Azure Session
            - powershell: |
                & $(build.sourcesDirectory)/azure/login.ps1 -method "SP"
              displayName: az-login
              env:
                AZURE_APP_ID: $(app_id)
                AZURE_APP_SECRET: $(app_secret)
                AZURE_TENANT: $(tenant)
            
            # Drop Storage Account
            - powershell: |
                & $(build.sourcesDirectory)/blob-storage/scripts/drop-blob-storage.ps1
              displayName: drop-blob-storage
              env:
                RESOURCE_GROUP: $(resource_group)
                NAME: $(var_blob_name)

            # Logout Azure Session
            - powershell: |
                & $(build.sourcesDirectory)/azure/logout.ps1
              displayName: az-logout

      - job: create_storage
        displayName: "JOB - CREATE STORAGE ACCOUNT"
        dependsOn: drop_storage
        condition: and(in(dependencies.drop_storage.result, 'Succeeded', 'Skipped'), or(eq('${{ parameters.stage }}', 'DROP & CREATE'), eq('${{ parameters.stage }}', 'CREATE STORAGE ACCOUNT')))
        steps:
            # Checkout Running Repository
            - checkout: self
              clean: true

            # Login Azure Session
            - powershell: |
                & $(build.sourcesDirectory)/azure/login.ps1 -method "SP"
              displayName: az-login
              env:
                AZURE_APP_ID: $(app_id)
                AZURE_APP_SECRET: $(app_secret)
                AZURE_TENANT: $(tenant)
            
            # Blob Storage Creation
            - powershell: |
                & $(build.sourcesDirectory)/blob-storage/scripts/create-blob-storage.ps1
              displayName: create-blob-storage
              env:
                LOCATION: ${{ parameters.region }}
                RESOURCE_GROUP: $(resource_group)
                NAME: $(var_blob_name)
                TLS_VERSION: $(var_tls_version)
                SKU: $(var_sku)
                ACCESS_TIER: $(var_access_tier)
                PNA: $(var_pna)
                KIND: $(var_kind)
                            
            # Logout Azure Session
            - powershell: |
                & $(build.sourcesDirectory)/azure/logout.ps1
              displayName: az-logout
